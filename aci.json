{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "clusterName": {
            "type": "string"
        },
        "adminUser": {
            "type": "string"
        },
        "publicKey": {
            "type": "string"
        },
        "clientId": {
            "type": "string"
        },
        "secret": {
            "type": "securestring"
        },
        "nodeCount": {
            "type": "int"
        },
        "kubernetesVersion": {
            "type": "string",
            "allowedValues": [
                "1.7.12",
                "1.8.1",
                "1.7.9",
                "1.8.2",
                "1.8.6"
            ]
        }
    },
    "variables": {
        "aksRG":"[concat('MC_',resourceGroup().name,'_',parameters('clusterName'),'_',replace(parameters('location'),' ', ''))]",
        "ipName":"[concat('ghost-',uniquestring(deployment().Name))]",
        "commands": [
            "[concat('az login --service-principal -u ',parameters('clientid') , ' -p ', parameters('secret'), ' --tenant ', subscription().tenantId,';')]",
            "az aks install-cli;",
            "[concat('az aks get-credentials --resource-group  ',resourceGroup().name , ' --name ', parameters('clusterName'),';')]",
            "kubectl get nodes;",
            "apk update;",
            "apk add curl;",
            "curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh;",
            "chmod 700 get_helm.sh;",
            "./get_helm.sh;",
            "[concat('IP=`az network public-ip show --resource-group ', variables('aksRG'),'  --name ', variables('ipName'),'  --query ipAddress`;')]",
            "echo \"IP is $IP\";",
            "[concat('DNS=`az network public-ip show --resource-group ', variables('aksRG'),'  --name ', variables('ipName'),'  --query dnsSettings.fqdn`;')]",
            "echo \"DNS is $DNS\";",
            "helm init --upgrade;",
            "helm install --set serviceType=LoadBalancer,ghostHost=$DNS,ghostLoadBalancerIP=$IP stable/ghost;"
        ],
        "command":[
            "bin/bash",
            "-c",
            "[concat(variables('commands')[0],variables('commands')[1],variables('commands')[2],variables('commands')[3],variables('commands')[4],variables('commands')[5],variables('commands')[6],variables('commands')[7],variables('commands')[8],variables('commands')[9],variables('commands')[10],variables('commands')[11],variables('commands')[12],variables('commands')[13],variables('commands')[14])]"
        ],
        //"ipAddressTemplateLink": "[uri(deployment().properties.templateLink.uri, 'publicIPAddress.json')]",
        "ipAddressTemplateLink": "https://raw.githubusercontent.com/simongdavies/ARMHelm/master/publicIPAddress.json",
        "resourceGroupTemplateLink": "https://raw.githubusercontent.com/simongdavies/ARMHelm/master/resourceGroupName.json"
    },
    "resources": [
        {
            "name": "[parameters('clusterName')]",
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2017-08-31",
            "location": "[parameters('location')]",
            "properties": {
                "dnsPrefix": "[concat(parameters('clusterName'),uniquestring(deployment().Name))]",
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "agentPoolProfiles": [
                    {
                        "name": "nodepool1",
                        "count": "[parameters('nodeCount')]",
                        "vmSize": "Standard_D1_v2",
                        "dnsPrefix": "[concat(parameters('clusterName'),uniquestring(deployment().Name))]",
                        "storageProfile": "ManagedDisks",
                        "osType": "Linux"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[parameters('adminUser')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('publicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "[parameters('clientId')]",
                    "secret": "[parameters('secret')]"
                }
            }
        },
        {
            "name": "GetResourceGroupName",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('resourceGroupTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourcegroupName":{
                        "value":"[variables('aksRG')]"
                    }
                }
            }
        },
        {
            "name": "CreatingPublicIp",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[parameters('clusterName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipAddressTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicDnsName": {
                        "value": "[concat('ghost',uniquestring(deployment().Name))]"
                    },
                    "publicIpName": {
                        "value": "[variables('ipName')]"
                    },
                    "resourcegroupName":{
                        "value":"[reference('GetResourceGroupName').outputs.name.value]"
                    }
                }
            }
        },
        {
            "location": "[parameters('location')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "acitest",
            "apiVersion": "2017-10-01-preview",
            "dependsOn": [
                "CreatingPublicIp",
                "[parameters('clusterName')]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "acitest",
                        "properties": {
                            "image": "microsoft/azure-cli",
                            "command": "[variables('command')]",
                            "resources": {
                                "requests": {
                                    "memoryInGB": 1.5,
                                    "cpu": 1.0
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "Never",
                "osType": "Linux"
            }
        }
    ]
}